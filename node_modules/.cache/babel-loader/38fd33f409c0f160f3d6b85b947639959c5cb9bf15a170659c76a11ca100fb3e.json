{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newitem = action.payload;\n      const existingItem = state.items.find(item => item.id === newitem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newitem.id,\n          price: newitem.price,\n          quantity: 1,\n          totalPrice: newitem.price,\n          name: newitem.title\n        });\n      } else {\n        existingItem.quantity++, existingItem.totalPrice = existingItem.totalPrice + newitem.price;\n      }\n    },\n    removeItemToCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        //existingItem.totalPrice = existingItem.totalPrice - existingItem.price\n      }\n    }\n  }\n});\nconst sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sent cart data!\"\n    }));\n    const response = async () => {};\n    dispatch(uiActions.showNotification({\n      status: \"success\",\n      title: \"Success!\",\n      message: \"Sent cart data successfully!\"\n    }));\n  };\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newitem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemToCart","filter","sendCartData","cart","dispatch","showNotification","status","message","response","cartActions","actions"],"sources":["E:/Advened Redux/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { uiActions } from \"./ui-slice\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n  },\r\n  reducers: {\r\n    addItemToCart(state, action) {\r\n      const newitem = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === newitem.id);\r\n      state.totalQuantity++;\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newitem.id,\r\n          price: newitem.price,\r\n          quantity: 1,\r\n          totalPrice: newitem.price,\r\n          name: newitem.title,\r\n        });\r\n      } else {\r\n        existingItem.quantity++,\r\n          (existingItem.totalPrice = existingItem.totalPrice + newitem.price);\r\n      }\r\n    },\r\n    removeItemToCart(state, action) {\r\n      const id = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === id);\r\n      state.totalQuantity--;\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.id !== id);\r\n      } else {\r\n        existingItem.quantity--;\r\n        //existingItem.totalPrice = existingItem.totalPrice - existingItem.price\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nconst sendCartData = (cart) => {\r\n  return async (dispatch) => {\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: \"pending\",\r\n        title: \"Sending...\",\r\n        message: \"Sent cart data!\",\r\n      })\r\n    );\r\n    const response = async () => {}\r\n\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: \"success\",\r\n        title: \"Success!\",\r\n        message: \"Sent cart data successfully!\",\r\n      })\r\n    );\r\n  };\r\n};\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,YAAY;AAEtC,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC5BG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE;EACjB,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC3B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACvEP,KAAK,CAACH,aAAa,EAAE;MACrB,IAAI,CAACO,YAAY,EAAE;QACjBJ,KAAK,CAACJ,KAAK,CAACY,IAAI,CAAC;UACfD,EAAE,EAAEL,OAAO,CAACK,EAAE;UACdE,KAAK,EAAEP,OAAO,CAACO,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAET,OAAO,CAACO,KAAK;UACzBf,IAAI,EAAEQ,OAAO,CAACU;QAChB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLR,YAAY,CAACM,QAAQ,EAAE,EACpBN,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACO,UAAU,GAAGT,OAAO,CAACO,KAAM;MACvE;IACF,CAAC;IACDI,gBAAgBA,CAACb,KAAK,EAAEC,MAAM,EAAE;MAC9B,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACzB,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC/DP,KAAK,CAACH,aAAa,EAAE;MACrB,IAAIO,YAAY,CAACM,QAAQ,KAAK,CAAC,EAAE;QAC/BV,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACkB,MAAM,CAAER,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC5D,CAAC,MAAM;QACLH,YAAY,CAACM,QAAQ,EAAE;QACvB;MACF;IACF;EACF;AACF,CAAC,CAAC;AAEF,MAAMK,YAAY,GAAIC,IAAI,IAAK;EAC7B,OAAO,MAAOC,QAAQ,IAAK;IACzBA,QAAQ,CACNzB,SAAS,CAAC0B,gBAAgB,CAAC;MACzBC,MAAM,EAAE,SAAS;MACjBP,KAAK,EAAE,YAAY;MACnBQ,OAAO,EAAE;IACX,CAAC,CACH,CAAC;IACD,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY,CAAC,CAAC;IAE/BJ,QAAQ,CACNzB,SAAS,CAAC0B,gBAAgB,CAAC;MACzBC,MAAM,EAAE,SAAS;MACjBP,KAAK,EAAE,UAAU;MACjBQ,OAAO,EAAE;IACX,CAAC,CACH,CAAC;EACH,CAAC;AACH,CAAC;AAED,OAAO,MAAME,WAAW,GAAG7B,SAAS,CAAC8B,OAAO;AAE5C,eAAe9B,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}